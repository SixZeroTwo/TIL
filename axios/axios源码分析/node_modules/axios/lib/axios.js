'use strict';
//工具导入
var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var mergeConfig = require('./core/mergeConfig');
var defaults = require('./defaults');

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  //创建Axios实例对象context
  var context = new Axios(defaultConfig);
  //将Axios.prototype.request函数的this指向绑定context，
  //并将该新函数返回赋值给instance
  debugger
  var instance = bind(Axios.prototype.request, context);

  //将原型上的方法添加到instance上
  utils.extend(instance, Axios.prototype, context);

  // 将context（Axios原型实例）上的属性（defaults和interceptors）添加到instance上
  utils.extend(instance, context);

  return instance;
}

// 创建axios用于模块输出（调用了createInstance）
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
//将Axios类暴露，从而实现类的继承
axios.Axios = Axios;

// 定义create方法
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = require('./cancel/Cancel');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require('./helpers/spread');

// Expose isAxiosError
axios.isAxiosError = require('./helpers/isAxiosError');

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;
